package org.ps5jb.client;

import org.ps5jb.loader.Status;

import java.io.*;
import java.net.InetSocketAddress;
import java.util.Arrays;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import java.net.Socket;


public class Exploit
{
    private static byte[] readFile(String path)
    {
        PrivilegedFileIO file = new PrivilegedFileIO(path);
        byte[] bytes = new byte[(int)file.length()];

        try {
            Status.println(file.getPath());
            InputStream is = file.getInputStream();
            is.read(bytes);
            is.close();
        } catch(Throwable t) {
            Status.println(String.valueOf(t));
        }
        return bytes;
    }
    private static void zipFile(ZipOutputStream zipOut, String path) throws IOException {
        PrivilegedFileIO file = new PrivilegedFileIO(path);

        if(file.isDirectory()) {
            zipDir(zipOut, path);
        } else {
            byte[] data = readFile(path);
            ZipEntry entry = new ZipEntry(path.substring(1));
            zipOut.putNextEntry(entry);
            zipOut.write(data, 0, data.length);
            zipOut.closeEntry();
        }
    }
    private static void zipDir(ZipOutputStream zipOut, String path) throws IOException {
        PrivilegedFileIO dir = new PrivilegedFileIO(path);

        if(!dir.isDirectory()) {
            zipFile(zipOut, path);
            return;
        }

        String[] listing = dir.list();
        for(int i=0; i<listing.length; i++) {
            path = dir.getPath() + "/" + listing[i];
            zipFile(zipOut, path);
        }
    }
    public boolean execute() {
        Status.println("Welcome to JAR File Dumper");
        try {
            String serverAddress = "192.168.0.11";
            int serverPort = 22052;
            Status.println("Waiting for connection...");

            Socket sock = new Socket();
            sock.connect(new InetSocketAddress(serverAddress, serverPort), 15000);

            Status.println("Socket created");

            File zipFile = File.createTempFile("app0", ".zip");
            try (ZipOutputStream zipOut = new ZipOutputStream(new FileOutputStream(zipFile))) {
                zipDir(zipOut, "/app0");
            }

            try (FileInputStream fis = new FileInputStream(zipFile)) {
                byte[] buf = new byte[4096];
                int len;
                while ((len = fis.read(buf)) > 0) {
                    sock.getOutputStream().write(buf, 0, len);
                }
            }
            Status.println("File sent successfully");

            sock.close();
        } catch (IOException e) {
            Status.println("Error: " + e.getMessage());
        } catch (Exception e) {
            Status.println("Connection timeout: " + e.getMessage());
        }
        return true;
    }
}