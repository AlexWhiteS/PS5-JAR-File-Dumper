package org.ps5jb.client;

import java.lang.ClassLoader;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.Field;
import java.security.ProtectionDomain;
import java.util.Map;
import java.util.HashMap;
import org.ps5jb.loader.Status;

public class NativeLibraryProxy {
    private static Constructor constructor = null;
    private static Method loadMethod = null;
    private static Method findEntryMethod = null;
    private static Field handleField = null;
    private static Map nativeLibraries = new java.util.HashMap();

    /*
    package java.lang;

    import java.util.Map;
    public class NativeLibraryProxy extends java.lang.ClassLoader$NativeLibrary {
	private final Map symtab;

	public NativeLibraryProxy(Map symtab, Class fromClass, String name, boolean isBuiltin) {
	    super(fromClass, name, isBuiltin);
	    this.symtab = symtab;
	}

	long findEntry(String name) {
	    Object addr = symtab.get(name);
	    if (addr != null) {
		return ((Long) addr);
	    }
	    return super.findEntry(name);
	}

        boolean load(String name, boolean b) {
            return super.load0(name, b);
        }
    }
    */

    // Bytecode that is semantically equivalent to the commented Java-like code above.
    private static final byte[] data = {
            (byte)0xca, (byte)0xfe, (byte)0xba, (byte)0xbe, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x37,
            (byte)0x00, (byte)0x37, (byte)0x0a, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x03, (byte)0x07,
            (byte)0x00, (byte)0x04, (byte)0x0c, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x06, (byte)0x01,
            (byte)0x00, (byte)0x23, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c,
            (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x43, (byte)0x6c, (byte)0x61, (byte)0x73,
            (byte)0x73, (byte)0x4c, (byte)0x6f, (byte)0x61, (byte)0x64, (byte)0x65, (byte)0x72, (byte)0x24,
            (byte)0x4e, (byte)0x61, (byte)0x74, (byte)0x69, (byte)0x76, (byte)0x65, (byte)0x4c, (byte)0x69,
            (byte)0x62, (byte)0x72, (byte)0x61, (byte)0x72, (byte)0x79, (byte)0x01, (byte)0x00, (byte)0x06,
            (byte)0x3c, (byte)0x69, (byte)0x6e, (byte)0x69, (byte)0x74, (byte)0x3e, (byte)0x01, (byte)0x00,
            (byte)0x27, (byte)0x28, (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f,
            (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x43, (byte)0x6c, (byte)0x61,
            (byte)0x73, (byte)0x73, (byte)0x3b, (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61,
            (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x53, (byte)0x74,
            (byte)0x72, (byte)0x69, (byte)0x6e, (byte)0x67, (byte)0x3b, (byte)0x5a, (byte)0x29, (byte)0x56,
            (byte)0x09, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x09, (byte)0x07, (byte)0x00, (byte)0x0a,
            (byte)0x0c, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x0c, (byte)0x01, (byte)0x00, (byte)0x1c,
            (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e,
            (byte)0x67, (byte)0x2f, (byte)0x4e, (byte)0x61, (byte)0x74, (byte)0x69, (byte)0x76, (byte)0x65,
            (byte)0x4c, (byte)0x69, (byte)0x62, (byte)0x72, (byte)0x61, (byte)0x72, (byte)0x79, (byte)0x50,
            (byte)0x72, (byte)0x6f, (byte)0x78, (byte)0x79, (byte)0x01, (byte)0x00, (byte)0x06, (byte)0x73,
            (byte)0x79, (byte)0x6d, (byte)0x74, (byte)0x61, (byte)0x62, (byte)0x01, (byte)0x00, (byte)0x0f,
            (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x75, (byte)0x74,
            (byte)0x69, (byte)0x6c, (byte)0x2f, (byte)0x4d, (byte)0x61, (byte)0x70, (byte)0x3b, (byte)0x0b,
            (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x0f, (byte)0x07, (byte)0x00, (byte)0x10, (byte)0x0c,
            (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x12, (byte)0x01, (byte)0x00, (byte)0x0d, (byte)0x6a,
            (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x75, (byte)0x74, (byte)0x69, (byte)0x6c,
            (byte)0x2f, (byte)0x4d, (byte)0x61, (byte)0x70, (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x67,
            (byte)0x65, (byte)0x74, (byte)0x01, (byte)0x00, (byte)0x26, (byte)0x28, (byte)0x4c, (byte)0x6a,
            (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67,
            (byte)0x2f, (byte)0x4f, (byte)0x62, (byte)0x6a, (byte)0x65, (byte)0x63, (byte)0x74, (byte)0x3b,
            (byte)0x29, (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c,
            (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x4f, (byte)0x62, (byte)0x6a, (byte)0x65,
            (byte)0x63, (byte)0x74, (byte)0x3b, (byte)0x07, (byte)0x00, (byte)0x14, (byte)0x01, (byte)0x00,
            (byte)0x0e, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61,
            (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x4c, (byte)0x6f, (byte)0x6e, (byte)0x67, (byte)0x0a,
            (byte)0x00, (byte)0x13, (byte)0x00, (byte)0x16, (byte)0x0c, (byte)0x00, (byte)0x17, (byte)0x00,
            (byte)0x18, (byte)0x01, (byte)0x00, (byte)0x09, (byte)0x6c, (byte)0x6f, (byte)0x6e, (byte)0x67,
            (byte)0x56, (byte)0x61, (byte)0x6c, (byte)0x75, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x03,
            (byte)0x28, (byte)0x29, (byte)0x4a, (byte)0x0a, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x1a,
            (byte)0x0c, (byte)0x00, (byte)0x1b, (byte)0x00, (byte)0x1c, (byte)0x01, (byte)0x00, (byte)0x09,
            (byte)0x66, (byte)0x69, (byte)0x6e, (byte)0x64, (byte)0x45, (byte)0x6e, (byte)0x74, (byte)0x72,
            (byte)0x79, (byte)0x01, (byte)0x00, (byte)0x15, (byte)0x28, (byte)0x4c, (byte)0x6a, (byte)0x61,
            (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f,
            (byte)0x53, (byte)0x74, (byte)0x72, (byte)0x69, (byte)0x6e, (byte)0x67, (byte)0x3b, (byte)0x29,
            (byte)0x4a, (byte)0x0a, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x1e, (byte)0x0c, (byte)0x00,
            (byte)0x1f, (byte)0x00, (byte)0x20, (byte)0x01, (byte)0x00, (byte)0x05, (byte)0x6c, (byte)0x6f,
            (byte)0x61, (byte)0x64, (byte)0x30, (byte)0x01, (byte)0x00, (byte)0x16, (byte)0x28, (byte)0x4c,
            (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e,
            (byte)0x67, (byte)0x2f, (byte)0x53, (byte)0x74, (byte)0x72, (byte)0x69, (byte)0x6e, (byte)0x67,
            (byte)0x3b, (byte)0x5a, (byte)0x29, (byte)0x5a, (byte)0x01, (byte)0x00, (byte)0x36, (byte)0x28,
            (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x75, (byte)0x74,
            (byte)0x69, (byte)0x6c, (byte)0x2f, (byte)0x4d, (byte)0x61, (byte)0x70, (byte)0x3b, (byte)0x4c,
            (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e,
            (byte)0x67, (byte)0x2f, (byte)0x43, (byte)0x6c, (byte)0x61, (byte)0x73, (byte)0x73, (byte)0x3b,
            (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61,
            (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x53, (byte)0x74, (byte)0x72, (byte)0x69, (byte)0x6e,
            (byte)0x67, (byte)0x3b, (byte)0x5a, (byte)0x29, (byte)0x56, (byte)0x01, (byte)0x00, (byte)0x04,
            (byte)0x43, (byte)0x6f, (byte)0x64, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x0f, (byte)0x4c,
            (byte)0x69, (byte)0x6e, (byte)0x65, (byte)0x4e, (byte)0x75, (byte)0x6d, (byte)0x62, (byte)0x65,
            (byte)0x72, (byte)0x54, (byte)0x61, (byte)0x62, (byte)0x6c, (byte)0x65, (byte)0x01, (byte)0x00,
            (byte)0x12, (byte)0x4c, (byte)0x6f, (byte)0x63, (byte)0x61, (byte)0x6c, (byte)0x56, (byte)0x61,
            (byte)0x72, (byte)0x69, (byte)0x61, (byte)0x62, (byte)0x6c, (byte)0x65, (byte)0x54, (byte)0x61,
            (byte)0x62, (byte)0x6c, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x74, (byte)0x68,
            (byte)0x69, (byte)0x73, (byte)0x01, (byte)0x00, (byte)0x1e, (byte)0x4c, (byte)0x6a, (byte)0x61,
            (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f,
            (byte)0x4e, (byte)0x61, (byte)0x74, (byte)0x69, (byte)0x76, (byte)0x65, (byte)0x4c, (byte)0x69,
            (byte)0x62, (byte)0x72, (byte)0x61, (byte)0x72, (byte)0x79, (byte)0x50, (byte)0x72, (byte)0x6f,
            (byte)0x78, (byte)0x79, (byte)0x3b, (byte)0x01, (byte)0x00, (byte)0x09, (byte)0x66, (byte)0x72,
            (byte)0x6f, (byte)0x6d, (byte)0x43, (byte)0x6c, (byte)0x61, (byte)0x73, (byte)0x73, (byte)0x01,
            (byte)0x00, (byte)0x11, (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x2f,
            (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x43, (byte)0x6c, (byte)0x61,
            (byte)0x73, (byte)0x73, (byte)0x3b, (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x6e, (byte)0x61,
            (byte)0x6d, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x12, (byte)0x4c, (byte)0x6a, (byte)0x61,
            (byte)0x76, (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f,
            (byte)0x53, (byte)0x74, (byte)0x72, (byte)0x69, (byte)0x6e, (byte)0x67, (byte)0x3b, (byte)0x01,
            (byte)0x00, (byte)0x09, (byte)0x69, (byte)0x73, (byte)0x42, (byte)0x75, (byte)0x69, (byte)0x6c,
            (byte)0x74, (byte)0x69, (byte)0x6e, (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x5a, (byte)0x01,
            (byte)0x00, (byte)0x10, (byte)0x4d, (byte)0x65, (byte)0x74, (byte)0x68, (byte)0x6f, (byte)0x64,
            (byte)0x50, (byte)0x61, (byte)0x72, (byte)0x61, (byte)0x6d, (byte)0x65, (byte)0x74, (byte)0x65,
            (byte)0x72, (byte)0x73, (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x61, (byte)0x64, (byte)0x64,
            (byte)0x72, (byte)0x01, (byte)0x00, (byte)0x12, (byte)0x4c, (byte)0x6a, (byte)0x61, (byte)0x76,
            (byte)0x61, (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x4f,
            (byte)0x62, (byte)0x6a, (byte)0x65, (byte)0x63, (byte)0x74, (byte)0x3b, (byte)0x01, (byte)0x00,
            (byte)0x0d, (byte)0x53, (byte)0x74, (byte)0x61, (byte)0x63, (byte)0x6b, (byte)0x4d, (byte)0x61,
            (byte)0x70, (byte)0x54, (byte)0x61, (byte)0x62, (byte)0x6c, (byte)0x65, (byte)0x07, (byte)0x00,
            (byte)0x32, (byte)0x01, (byte)0x00, (byte)0x10, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61,
            (byte)0x2f, (byte)0x6c, (byte)0x61, (byte)0x6e, (byte)0x67, (byte)0x2f, (byte)0x4f, (byte)0x62,
            (byte)0x6a, (byte)0x65, (byte)0x63, (byte)0x74, (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x6c,
            (byte)0x6f, (byte)0x61, (byte)0x64, (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x62, (byte)0x01,
            (byte)0x00, (byte)0x0a, (byte)0x53, (byte)0x6f, (byte)0x75, (byte)0x72, (byte)0x63, (byte)0x65,
            (byte)0x46, (byte)0x69, (byte)0x6c, (byte)0x65, (byte)0x01, (byte)0x00, (byte)0x17, (byte)0x4e,
            (byte)0x61, (byte)0x74, (byte)0x69, (byte)0x76, (byte)0x65, (byte)0x4c, (byte)0x69, (byte)0x62,
            (byte)0x72, (byte)0x61, (byte)0x72, (byte)0x79, (byte)0x50, (byte)0x72, (byte)0x6f, (byte)0x78,
            (byte)0x79, (byte)0x2e, (byte)0x6a, (byte)0x61, (byte)0x76, (byte)0x61, (byte)0x00, (byte)0x21,
            (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01,
            (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x0c, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x21,
            (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x22, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x68,
            (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0e,
            (byte)0x2a, (byte)0x2c, (byte)0x2d, (byte)0x15, (byte)0x04, (byte)0xb7, (byte)0x00, (byte)0x01,
            (byte)0x2a, (byte)0x2b, (byte)0xb5, (byte)0x00, (byte)0x07, (byte)0xb1, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x23, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0e,
            (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x09, (byte)0x00, (byte)0x08,
            (byte)0x00, (byte)0x0a, (byte)0x00, (byte)0x0d, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x24,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x34, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x25, (byte)0x00, (byte)0x26, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x0c,
            (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x27,
            (byte)0x00, (byte)0x28, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0e,
            (byte)0x00, (byte)0x29, (byte)0x00, (byte)0x2a, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x2b, (byte)0x00, (byte)0x2c, (byte)0x00, (byte)0x04,
            (byte)0x00, (byte)0x2d, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x04, (byte)0x00,
            (byte)0x0b, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x27, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x29, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2b, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x1b, (byte)0x00, (byte)0x1c, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x22, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x75, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x1d, (byte)0x2a, (byte)0xb4, (byte)0x00,
            (byte)0x07, (byte)0x2b, (byte)0xb9, (byte)0x00, (byte)0x0d, (byte)0x02, (byte)0x00, (byte)0x4d,
            (byte)0x2c, (byte)0xc6, (byte)0x00, (byte)0x0b, (byte)0x2c, (byte)0xc0, (byte)0x00, (byte)0x13,
            (byte)0xb6, (byte)0x00, (byte)0x15, (byte)0xad, (byte)0x2a, (byte)0x2b, (byte)0xb7, (byte)0x00,
            (byte)0x19, (byte)0xad, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x23,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x0e, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x0f, (byte)0x00, (byte)0x0f,
            (byte)0x00, (byte)0x10, (byte)0x00, (byte)0x17, (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x24,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x1d, (byte)0x00, (byte)0x25, (byte)0x00, (byte)0x26, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x1d, (byte)0x00, (byte)0x29, (byte)0x00, (byte)0x2a,
            (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x0b, (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x2e,
            (byte)0x00, (byte)0x2f, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x30, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0xfc, (byte)0x00, (byte)0x17, (byte)0x07,
            (byte)0x00, (byte)0x31, (byte)0x00, (byte)0x2d, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x05,
            (byte)0x01, (byte)0x00, (byte)0x29, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x33, (byte)0x00, (byte)0x20, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x22, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x45, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x07, (byte)0x2a, (byte)0x2b, (byte)0x1c, (byte)0xb7, (byte)0x00,
            (byte)0x1d, (byte)0xac, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x23,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x16, (byte)0x00, (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x20,
            (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x25,
            (byte)0x00, (byte)0x26, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x07,
            (byte)0x00, (byte)0x29, (byte)0x00, (byte)0x2a, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x34, (byte)0x00, (byte)0x2c, (byte)0x00, (byte)0x02,
            (byte)0x00, (byte)0x2d, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x09, (byte)0x02, (byte)0x00,
            (byte)0x29, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x36
    };

    static {
        try {
            PrivilegeEscalation.openModulePackage("java.base", "jdk.internal.misc", NativeLibraryProxy.class);
            Class UnsafeClass = Class.forName("jdk.internal.misc.Unsafe");
            Field theUnsafeField = UnsafeClass.getDeclaredField("theUnsafe");
            Method defineClassMethod = UnsafeClass.getDeclaredMethod("defineClass", String.class, data.getClass(),
                    Integer.TYPE, Integer.TYPE, ClassLoader.class,
                    ProtectionDomain.class);
            theUnsafeField.setAccessible(true);
            defineClassMethod.setAccessible(true);

            Object theUnsafe = theUnsafeField.get(null);
            Class clazz = (Class)defineClassMethod.invoke(theUnsafe, "java.lang.NativeLibraryProxy", data,
                    new Integer(0), new Integer(data.length), null, null);
            constructor = clazz.getDeclaredConstructors()[0];
            constructor.setAccessible(true);

            loadMethod = clazz.getDeclaredMethod("load", String.class, Boolean.TYPE);
            loadMethod.setAccessible(true);

            findEntryMethod = clazz.getDeclaredMethod("findEntry", String.class);
            findEntryMethod.setAccessible(true);

            Field field = ClassLoader.class.getDeclaredField("nativeLibraries");
            field.setAccessible(true);
            field.set(NativeLibraryProxy.class.getClassLoader(), nativeLibraries);

            Class NativeLibraryClass = Class.forName("java.lang.ClassLoader$NativeLibrary");
            handleField = NativeLibraryClass.getDeclaredField("handle");
            handleField.setAccessible(true);
        } catch (Throwable t) {
            Status.println(String.valueOf(t));
        }
    }

    public static void load(String filename, Class clazz, boolean isBuiltin) {
        Map symbolTable = new HashMap();
        Object instance = newInstance(symbolTable, clazz, filename, new Boolean(isBuiltin));
        long libAddress = 0x2001; //load(instance, filename);

        try {
            handleField.set(instance, new Long(libAddress));
        } catch (Throwable t) {
            Status.println(String.valueOf(t));
        }

        String prefix = "Java_" + clazz.getName().replace('.', '_') + "_";
        for(Method m : clazz.getDeclaredMethods()) {
            if(Modifier.isNative(m.getModifiers())) {
                long symbolAddress = findEntry(instance, m.getName());
                String symbolName = prefix + m.getName();
                symbolTable.put(symbolName, new Long(symbolAddress));
            }
        }
    }

    private static Object newInstance(Map symbols, Class fromClass, String name, boolean isBuiltin) {
        Object instance = null;
        try {
            instance = constructor.newInstance(symbols, fromClass, name, new Boolean(isBuiltin));
            nativeLibraries.put(name, instance);
        }  catch (Throwable t) {
            Status.println(String.valueOf(t));
        }
        return instance;
    }

    private static long load(Object instance, String libraryName) {
        try {
            Long l = (Long)loadMethod.invoke(instance, libraryName, new Boolean(false));
            return l.longValue();
        }  catch (Throwable t) {
            Status.println(String.valueOf(t));
        }
        return 0;
    }

    private static long findEntry(Object instance, String symbolName) {
        try {
            Long l = (Long)findEntryMethod.invoke(instance, symbolName);
            return l.longValue();
        }  catch (Throwable t) {
            Status.println(String.valueOf(t));
        }
        return 0;
    }
}